getwd()
setwd("C:/Users/RPlab/Documents/coinfection/data sheets/")
library(Heatplus)
library(vegan)#load the vegan package for hierachical clustering if you want to use distance functions not specified in dist.
library(RColorBrewer)# load the RColorBrewer package for better colour options
library(gplots)  # for heatmap.2
# to install packages from Bioconductor:

#if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#
#BiocManager::install("Heatplus") # annHeatmap or annHeatmap2

data <- read.csv("50 patients .csv",header = TRUE) #data for Rowsidecolor.
str(data)

all.data <- read.csv("Transcriptome_virus.csv",stringsAsFactors=FALSE)  # load the data for heatmap
dim(all.data)

all.data[1:3, 1:4]
# to strip off the sample ids and convert them to row names  
row.names(all.data) <- all.data$Sample
row.names[1:3, 1:4]
all.data <- all.data[, -1]
(all.data)
all.data[is.na(all.data)]= 0 #change NA to 0 for matrix

#to first transform the raw counts of reads to proportions within a sample
data.prop <- all.data/rowSums(all.data)
dim(data.prop)

# colorRampPalette is in the RColorBrewer package.  This creates a colour palette that shades from light yellow to red in RGB space with 100 unique colours
scaleyellowred <- colorRampPalette(c("lightyellow", "red"), space = "rgb")(100)

# determine the maximum relative abundance for each column
maxab <- apply(data.prop, 2, max)
head(maxab)

# remove the genera with less than 1% as their maximum relative abundance
n1 <- names(which(maxab < 0.01))
data.prop.1 <- data.prop[, -which(names(data.prop) %in% n1)]

# the margins command sets the width of the white space around the plot. The first element is the bottom margin and the second is the right margin
heatmap(as.matrix(data.prop.1), Rowv = NA, Colv = NA, col = scaleyellowred, margins = c(10, 5),lhei = c(2, 8))
heatmap.2(as.matrix(data.prop.1), Rowv =NA, Colv = NA, col = scaleyellowred, margins = c(16, 7), trace = "none",  main = "Heatmap for RVOP", lhei = c(2, 8)) 

# calculate the Bray-Curtis dissimilarity matrix on the full dataset:
#data.dist <- vegdist(data.prop, method = "bray")
# Do average linkage hierarchical clustering. Other options are 'complete' or 'single'. You'll need to choose the one that best fits the needs of your situation and your data.
#row.clus <- hclust(data.dist, "aver")

# make the heatmap with Rowv = as.dendrogram(row.clus)
heatmap.2(as.matrix(data.prop.1), Rowv = as.dendrogram(row.clus), Colv = NA, col = scaleyellowred, margins = c(10, 3))

# you have to transpose the dataset to get the genera as rows
data.dist.g <- vegdist(t(data.prop.1), method = "bray")
col.clus <- hclust(data.dist.g, "aver")

# make the heatmap with Rowv = as.dendrogram(row.clus)

heatmap(as.matrix(data.prop.1), Rowv = NA, Colv = as.dendrogram(col.clus), col = scaleyellowred, margins = c(10, 3),lhei = c(2, 8))# this makes the colour-key legend a little thinner

# this randomly samples from a uniform distribution and rounds the result to an integer value
dim(var1)
var1 <- replace(data$Respiratory.Support, which(data$Respiratory.Support == 0), "deepskyblue")
var2 <- replace(data$Breathlessness, which(data$Breathlessness == 0), "pink")
var1
var<-cbind(row.names(data.prop), var1)
data.prop.1_matrix<-as.matrix(data.prop.1)
data.prop.1_matrix

heatmap(t(as.matrix(data.prop.1)), Rowv =NA, Colv =NA , col = scaleyellowred,RowSideColors=var2,  margins = c(8, 8), trace = "none", density.info = "none", main = "Heatmap of Bacterial Sp. from Holo-Transcriptome  ", lhei = c(2, 8)) # this makes the colour-key legend a little thinner | Rowsidecolor- for data distribution wrt a particular variable.
dev.off()# close the plot... IF heatmap doesnt form then try closing the plot and re running the codes.
